name: Full Release

on:
  pull_request:
    branches:
        - master
    types: [closed]

env:
  artifactId: gaffer2
  MAVEN_OPTS: -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.httpconnectionManager.ttlSeconds=25

jobs:
  deploy-release:
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest

    outputs:
      release_version: ${{ steps.release-version.outputs.release_version }}

    steps:
    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Checkout master
      uses: actions/checkout@v4
      with:
        ref: master
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Github credentials
      run: |
        git config user.name github-actions[bot]
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com

    - name: Get release version
      run: |
        echo "RELEASE_VERSION=$(mvn -q help:evaluate -DforceStdout -Dexpression=pom.version)" >> $GITHUB_ENV

    - name: Output release version
      id: release-version
      run: |
        echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT

  generate-javadoc:
    runs-on: ubuntu-latest
    needs:
    - deploy-release

    steps:
    - name: Checkout Master
      uses: actions/checkout@v4
      with:
        ref: master
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Github credentials
      run: |
        git config user.name github-actions[bot]
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com

    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Set version
      run: echo "RELEASE_VERSION=$(echo ${{ needs.deploy-release.outputs.release_version }})" >> $GITHUB_ENV

    - name: Upload Javadoc
      run: |
        git remote set-branches --add origin gh-pages
        git pull
        mvn -q clean install -Pquick -Dskip.jar-with-dependencies=true -Dshaded.jar.phase=true
        mvn -q javadoc:aggregate
        git checkout gh-pages
        rm -rf uk
        rm -rf jquery
        rm -rf resources
        cp -rlf target/site/apidocs/* .
        git add .
        git commit -a -m "Updated javadoc - $RELEASE_VERSION"
        git push

  release-to-nexus:
    runs-on: ubuntu-latest
    needs:
    - deploy-release

    steps:
    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Checkout release
      uses: actions/checkout@v4
      with:
        ref: master

    # - name: Decode CodeSigning key
    #   env:
    #     CODE_SIGNING_KEY: ${{ secrets.CODE_SIGNING_KEY }}
    #     CODE_SIGNING_IV: ${{ secrets.CODE_SIGNING_IV }}
    #   run: openssl aes-256-cbc -K "$CODE_SIGNING_KEY" -iv "$CODE_SIGNING_IV" -in cd/codesigning.asc.enc -out cd/codesigning.asc -d

    # - name: Import CodeSigning key
    #   run: gpg --batch --fast-import cd/codesigning.asc

    - name: Release to Nexus
    #   env:
    #     GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
    #     GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    #     OSS_NEXUS_USERNAME: ${{ secrets.OSS_NEXUS_USERNAME }}
    #     OSS_NEXUS_PASSWORD: ${{ secrets.OSS_NEXUS_PASSWORD }}
      run:
        echo "$(would deploy here)"
        # mvn deploy -P quick,ossrh-release --settings cd/mvnsettings.xml -B

  update-github-releases:
    runs-on: ubuntu-latest
    needs:
    - deploy-release

    steps:
    - name: Checkout Master
      uses: actions/checkout@v4
      with:
        ref: master

    - name: Set version
      run: echo "RELEASE_VERSION=$(echo ${{ needs.deploy-release.outputs.release_version }})" >> $GITHUB_ENV

    - name: Create Release Notes
      uses: spring.io/github-changelog-generator@version0.0.11
      with:
        milestone: ${{ env.RELEASE_VERSION }}
        config-file: .github/release-notes.yml
        changelog-file: release_file.md
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload notes
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.artifactId }}-${{ env.RELEASE_VERSION }}
        name: Gaffer ${{ env.RELEASE_VERSION }}
        body_path: release_file.md

  update-develop:
    runs-on: ubuntu-latest
    needs:
    - deploy-release

    steps:
    - name: Checkout develop
      uses: actions/checkout@v4
      with:
        ref: develop
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Github credentials
      run: |
        git config user.name github-actions[bot]
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com

    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Merge release into develop
      run: |
        git merge origin/master

    - name: Update develop branch
      run: |
        git checkout develop
        mvn versions:set-property -Dproperty=revision -DnewVersion=$(echo ${{ needs.deploy-release.outputs.release_version }})-SNAPSHOT
        mvn build-helper:parse-version versions:set-property \
            -Dproperty=revision \
            -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT
        git commit -a -m "prepare for next development iteration"
        git push
