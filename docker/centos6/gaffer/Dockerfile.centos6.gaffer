##########################################################
# Copyright 2016 Crown Copyright
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##########################################################

########################################################################
# Creates image containing jar files
# Gaffer source is downloaded from the gaffer github
# Apache Maven from apache distribution site
# Maven is used to build the jar from the source
# The jars required for running the Gaffer example are then packaged up
# into a tar file
#######################################################################


FROM gaffer-docker/centos6:base 

# Dockerfile metadata

LABEL com.gaffer-docker.version.is-beta="yes" \
      com.gaffer-docker.version.is-production="no" \
      com.gaffer-docker.version="0.0.4-beta" \
      com.gaffer-docker.release-date="2016-05-06" \
      com.gaffer-docker.description="Gaffer source file"

# Directory where gaffer source code is cloned to. Directory is removed at the end of the installation process
ENV INSTALL_DIR /data/Gaffer_Source

# Directory where jar files generated by the maven build are transferred to
ENV TARGET_DIR /data/Gaffer

# Creates directories
RUN mkdir -p ${TARGET_DIR}
RUN mkdir -p ${INSTALL_DIR}

# Declares environment variables for version of jdk and installation directory
# aids supportability 

# Setup_locn_directory contains the jdk files, the configure_store_prop shell script
# used to set the property file on the gaffer example jar file so it
# insets information into the accumulo database

ENV SETUP_LOCN_DIR setup_files

# Clones gaffer source directory and runs a clean install - this will download a lot of dependencies but this step will be cached so shouldn't have to run it again.
# This has been split out into modules so if one fails we don't need to redownload all the previous dependencies again!
RUN git clone https://github.com/GovernmentCommunicationsHeadquarters/Gaffer.git  ${INSTALL_DIR};
RUN cd ${INSTALL_DIR} && /usr/local/maven/bin/mvn clean install -N -DskipTests;
RUN cd ${INSTALL_DIR}/gaffer-core && /usr/local/maven/bin/mvn clean install -DskipTests;
RUN cd ${INSTALL_DIR}/simple-function-library && /usr/local/maven/bin/mvn clean install -DskipTests;
RUN cd ${INSTALL_DIR}/simple-operation-library && /usr/local/maven/bin/mvn clean install -DskipTests;
RUN cd ${INSTALL_DIR}/simple-serialisation-library && /usr/local/maven/bin/mvn clean install -DskipTests;
RUN cd ${INSTALL_DIR}/gaffer-integration-tests && /usr/local/maven/bin/mvn clean install -DskipTests;
RUN cd ${INSTALL_DIR}/array-list-store && /usr/local/maven/bin/mvn clean install -DskipTests;
RUN cd ${INSTALL_DIR}/accumulo-store && /usr/local/maven/bin/mvn clean install -DskipTests;
RUN cd ${INSTALL_DIR}/rest-api && /usr/local/maven/bin/mvn clean install -DskipTests;
RUN cd ${INSTALL_DIR}/example && /usr/local/maven/bin/mvn clean install -DskipTests;

# Calls the script which sets the properties in the accumulo example files to ensure output is written to accumulo
# Generates the jar file using maven
# Creates a jar file containing jar files required to run the gaffer example gaffer
# Removes naven and the gaffer source directory
    
ADD ${SETUP_LOCN_DIR}/configure_store_prop.sh ${INSTALL_DIR}/

RUN if [[ $repo_branch ]]; then cd ${INSTALL_DIR}; git checkout $repo_branch; fi;
RUN \
    cd ${INSTALL_DIR}  && ./configure_store_prop.sh && \
    cd ${INSTALL_DIR}  && rm -f configure_store_prop.sh && \
    cd ${INSTALL_DIR}  && /usr/local/maven/bin/mvn clean install -pl \!tinkerpop -DskipTests && \
    cp -pf ~/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.6.2/jackson-annotations-2.6.2.jar ${TARGET_DIR}/ && \
    cp -pf ~/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.6.2/jackson-core-2.6.2.jar ${TARGET_DIR}/ && \
    cp -pf ~/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.6.2/jackson-databind-2.6.2.jar ${TARGET_DIR}/ && \
    find ${INSTALL_DIR} -name  '*.jar' -type f | xargs cp -t ${TARGET_DIR}/

# Create tar file  with gaffer2 jar files

RUN \
    cd ${TARGET_DIR} && rm -f *-tests.jar; \
    cd ${TARGET_DIR} && tar cvf gaffer2.tar accumulo-store-iterators*.jar; \
    cd ${TARGET_DIR} && tar uvf gaffer2.tar common-util-*.jar; \
    cd ${TARGET_DIR} && tar uvf gaffer2.tar data-*.jar; \
    cd ${TARGET_DIR} && tar uvf gaffer2.tar example-*.jar; \
    cd ${TARGET_DIR} && tar uvf gaffer2.tar function-*.jar; \
    cd ${TARGET_DIR} && tar uvf gaffer2.tar graph-*.jar; \
    cd ${TARGET_DIR} && tar uvf gaffer2.tar jackson-*.jar; \
    cd ${TARGET_DIR} && tar uvf gaffer2.tar simple-operation-library-*.jar; \
    cd ${TARGET_DIR} && tar uvf gaffer2.tar operation-*.jar; \
    cd ${TARGET_DIR} && tar uvf gaffer2.tar serialisation-*.jar; \
    cd ${TARGET_DIR} && tar uvf gaffer2.tar simple-function-library-*.jar; \
    cd ${TARGET_DIR} && tar uvf gaffer2.tar simple-serialisation-library-*.jar; \
    cd ${TARGET_DIR} && tar uvf gaffer2.tar store-*.jar; \
    cd ${TARGET_DIR} && tar tvf gaffer2.tar
 

# Ensures directory containing jar file is available to other containers
RUN chmod -R 777 ${TARGET_DIR}
 
VOLUME ["/data"]
ENTRYPOINT ["/bin/bash"]
